apply plugin: 'com.android.application'

dependencies {
    implementation rootProject.ext.supportV4
    implementation rootProject.ext.supportAnnotations
    implementation rootProject.ext.supportMultidex

    implementation rootProject.ext.dagger
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    annotationProcessor rootProject.ext.daggerCompiler

    implementation rootProject.ext.butterKnifeRuntime
    annotationProcessor rootProject.ext.butterKnifeCompiler
    implementation rootProject.ext.timber
    //implementation rootProject.ext.rxJava
    //implementation rootProject.ext.rxAndroid
    //implementation rootProject.ext.rxBinding

    compileOnly rootProject.ext.autoValue
    annotationProcessor rootProject.ext.autoValue
    compileOnly rootProject.ext.autoValueGsonAnnotations
    annotationProcessor rootProject.ext.autoValueGson
    implementation rootProject.ext.autoValueParcelAdapter
    annotationProcessor rootProject.ext.autoValueParcel
    compileOnly rootProject.ext.autoValueCursorAnnotations
    annotationProcessor rootProject.ext.autoValueCursor

    implementation project(':sqlbrite')
    implementation project(':sqlbrite-support')
    implementation rootProject.ext.supportSqliteFramework

    //implementation project(':sqlbrite-sqlcipher-integration')
    implementation rootProject.ext.supportSqlcipher
    implementation rootProject.ext.sqlbrite_sqlcipher_integration
    //implementation project(':sqlbrite-wcdb-integration')
    implementation rootProject.ext.supportWcdb
    implementation rootProject.ext.sqlbrite_wcdb_integration

    implementation rootProject.ext.androidArchViewModel
    implementation rootProject.ext.androidArchExtensions

    implementation rootProject.ext.retrofit_runtime
    implementation rootProject.ext.retrofit_gson
    implementation rootProject.ext.retrofit_mock
    implementation rootProject.ext.retrofit_rxAdapter
    implementation rootProject.ext.okhttp_logging_interceptor

    implementation rootProject.ext.rxbase
}

android {
    compileSdkVersion versions.compileSdk
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        textOutput 'stdout'
        textReport true
        ignore 'InvalidPackage'
        // Provided AutoValue pulls in Guava and friends. Doesn't end up in APK.
    }

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        applicationId 'com.example.sqlbrite.todo'

        versionCode 1
        versionName '1.0'

        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        'autovaluegson.defaultCollectionsToEmpty'        : 'true',
                        'autovaluegson.mutableAdaptersWithDefaultSetters': 'true'
                ]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.development'
            signingConfig signingConfigs.debug
        }
    }
}



configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion rootProject.ext.androidSupportVersion
            }
        }
    }
}